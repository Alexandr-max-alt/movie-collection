[{"C:\\Users\\ALEX\\Desktop\\Дмитрий Трепачёв Ментор\\React\\Movie collection\\Movie collection\\src\\index.js":"1","C:\\Users\\ALEX\\Desktop\\Дмитрий Трепачёв Ментор\\React\\Movie collection\\Movie collection\\src\\App.js":"2","C:\\Users\\ALEX\\Desktop\\Дмитрий Трепачёв Ментор\\React\\Movie collection\\Movie collection\\src\\Components\\Film.jsx":"3","C:\\Users\\ALEX\\Desktop\\Дмитрий Трепачёв Ментор\\React\\Movie collection\\Movie collection\\src\\Components\\Options.jsx":"4","C:\\Users\\ALEX\\Desktop\\Дмитрий Трепачёв Ментор\\React\\Movie collection\\Movie collection\\src\\Components\\Collection.jsx":"5","C:\\Users\\ALEX\\Desktop\\Дмитрий Трепачёв Ментор\\React\\Movie collection\\Movie collection\\src\\Components\\Rating.jsx":"6","C:\\Users\\ALEX\\Desktop\\Дмитрий Трепачёв Ментор\\React\\Movie collection\\Movie collection\\src\\Components\\Comment.jsx":"7"},{"size":234,"mtime":1700212913515,"results":"8","hashOfConfig":"9"},{"size":4768,"mtime":1700580069545,"results":"10","hashOfConfig":"9"},{"size":3291,"mtime":1700578201440,"results":"11","hashOfConfig":"9"},{"size":1081,"mtime":1700566690812,"results":"12","hashOfConfig":"9"},{"size":647,"mtime":1700575846086,"results":"13","hashOfConfig":"9"},{"size":706,"mtime":1700574610433,"results":"14","hashOfConfig":"9"},{"size":344,"mtime":1700496846049,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"13sn76y",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ALEX\\Desktop\\Дмитрий Трепачёв Ментор\\React\\Movie collection\\Movie collection\\src\\index.js",[],[],"C:\\Users\\ALEX\\Desktop\\Дмитрий Трепачёв Ментор\\React\\Movie collection\\Movie collection\\src\\App.js",[],[],"C:\\Users\\ALEX\\Desktop\\Дмитрий Трепачёв Ментор\\React\\Movie collection\\Movie collection\\src\\Components\\Film.jsx",["39","40"],[],"import React from 'react';\r\nimport { Rating } from './Rating';\r\nimport { Comment } from './Comment';\r\n\r\nexport const Film = ({ id, collection, onChangeRating, addComment, deleteComment, reloadPage}) => {\r\n    const [writeComment, setWriteComment] = React.useState(false);\r\n    const [value, setValue] = React.useState('');\r\n\r\n    const addComment2 = (id) => {\r\n        if (writeComment && value) {\r\n            setValue('');\r\n            addComment(id, value);\r\n        };\r\n        setWriteComment(!writeComment);\r\n    };\r\n    \r\n    return (\r\n        collection.map((obj, index) => {\r\n            if (obj.id === id) {\r\n                return (\r\n                    <div key={obj.id} className='title'>\r\n                        <div className='title-film-info'>\r\n                            <button className='title-back-button' onClick={reloadPage}>&larr;</button>\r\n                            <img className='title-img' src={obj.photo}></img>\r\n                            <div className='title-info'>\r\n                                <h1 className='title-name'>{obj.name}</h1>\r\n                                <h4 className='title-year'><span>Year:</span> {obj.year}</h4>\r\n                                <Rating\r\n                                    key={index}\r\n                                    collection={collection}\r\n                                    onChangeRating={onChangeRating}\r\n                                    id={id}\r\n                                />\r\n                                <p><span>Description:</span> {obj.description}</p>\r\n                                <p><span>Director:</span> {obj.director}</p>\r\n                                <p><span>Actors:</span> {obj.actors}</p>\r\n                                <a href={obj.link}><span className='title-link'>Watch</span></a>\r\n                                <ul className='title-comments'>\r\n                                    Comments:\r\n                                    {collection[id-1].comments &&\r\n                                        collection[id-1].comments.map((obj, commentIndex) => {                                                                               \r\n                                            return <Comment\r\n                                                deleteComment={deleteComment}\r\n                                                id={id}\r\n                                                key={commentIndex}\r\n                                                index={commentIndex}\r\n                                                {...obj}\r\n                                            />\r\n                                        })\r\n                                    }\r\n                                </ul>\r\n                                {writeComment &&\r\n                                    <textarea value={value} onChange ={(e)=>setValue(e.target.value)} placeholder='text' className='title-textarea'></textarea>\r\n                                }\r\n                                <button onClick={()=>addComment2(id)} className='title-comment-button'>{writeComment ? 'publish a review' : 'write a review'}</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        })\r\n    ) \r\n}","C:\\Users\\ALEX\\Desktop\\Дмитрий Трепачёв Ментор\\React\\Movie collection\\Movie collection\\src\\Components\\Options.jsx",[],[],"C:\\Users\\ALEX\\Desktop\\Дмитрий Трепачёв Ментор\\React\\Movie collection\\Movie collection\\src\\Components\\Collection.jsx",["41"],[],"export const Collection = ({ name, photo, year, description, rating, setIsFilm, setId,id}) => {\r\n    \r\n    const sliceDesc = description.split(' ').slice(0, 20).join(' ') + '...';\r\n    return (\r\n        <li onClick={() => {setIsFilm(true); setId(id)}}>\r\n                <div className='collection'>\r\n                    <h1>{name}</h1>\r\n                    <img src={photo} alt=\"photo\"/>\r\n                    <div className='container-info'>\r\n                        <h4>{year}</h4>\r\n                    <p>Rating:{rating}</p>\r\n                    </div>\r\n                    <p>{sliceDesc}</p>\r\n                </div>\r\n            </li>\r\n    )\r\n}","C:\\Users\\ALEX\\Desktop\\Дмитрий Трепачёв Ментор\\React\\Movie collection\\Movie collection\\src\\Components\\Rating.jsx",[],[],"C:\\Users\\ALEX\\Desktop\\Дмитрий Трепачёв Ментор\\React\\Movie collection\\Movie collection\\src\\Components\\Comment.jsx",[],[],{"ruleId":"42","severity":1,"message":"43","line":18,"column":37,"nodeType":"44","messageId":"45","endLine":18,"endColumn":39},{"ruleId":"46","severity":1,"message":"47","line":24,"column":29,"nodeType":"48","endLine":24,"endColumn":72},{"ruleId":"49","severity":1,"message":"50","line":8,"column":21,"nodeType":"48","endLine":8,"endColumn":51},"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop."]